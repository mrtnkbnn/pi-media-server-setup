version: '3.8'

networks:
  applications: {}
  monitoring:
    driver: bridge

volumes:
  jellyfin_data: {}
  radarr_data: {}
  sonarr_data: {}
  bazarr_data: {}
  prowlarr_data: {}
  deluge_data: {}
  heimdall_data: {}
  grafana_data: {}
  prometheus_data: {}

services:
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - jellyfin_data:/config
      - ${MOVIES_DIR}:/data/movies
      - ${TVSHOWS_DIR}:/data/tvshows
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
      - 1900:1900/udp
    networks:
      - applications
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - radarr_data:/config
      - ${MOVIES_DIR}:/movies
      - ${DOWNLOADS_DIR}:/downloads
    ports:
      - 7878:7878
    networks:
      - applications
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - sonarr_data:/config
      - ${TVSHOWS_DIR}:/tv
      - ${DOWNLOADS_DIR}:/downloads
    ports:
      - 8989:8989
    networks:
      - applications
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - bazarr_data:/config
      - ${MOVIES_DIR}:/movies
      - ${TVSHOWS_DIR}:/tv
    ports:
      - 6767:6767
    networks:
      - applications
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - prowlarr_data:/config
    ports:
      - 9696:9696
    networks:
      - applications
  deluge:
    image: linuxserver/deluge:latest
    container_name: deluge
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - deluge_data:/config
      - ${DOWNLOADS_DIR}:/downloads
    ports:
      - 8112:8112
    networks:
      - applications
  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - heimdall_data:/config
    ports:
      - 80:80
    networks:
      - applications
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    networks:
      - monitoring
